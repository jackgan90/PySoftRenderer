!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BLACK	.\color.py	/^BLACK = (0, 0, 0)$/;"	v	language:Python
BLUE	.\color.py	/^BLUE = (0, 0, 255)$/;"	v	language:Python
Buffer3D	.\buffer3d.py	/^class Buffer3D(object):$/;"	c	language:Python
CCW	pipeline.py	/^	CCW = 2$/;"	v	class:WindingOrder
CW	pipeline.py	/^	CW = 1$/;"	v	class:WindingOrder
Camera	.\camera.py	/^class Camera(object):$/;"	c	language:Python
Cube	.\simplemesh.py	/^class Cube(object):$/;"	c	language:Python
DEFAULT_FRAME_RATE	window.py	/^DEFAULT_FRAME_RATE = 30$/;"	v
DEFAULT_WINDOW_HEIGHT	pipeline.py	/^DEFAULT_WINDOW_HEIGHT = 400$/;"	v
DEFAULT_WINDOW_WIDTH	pipeline.py	/^DEFAULT_WINDOW_WIDTH = 400$/;"	v
DrawMode	pipeline.py	/^class DrawMode(object):$/;"	c
EPSILON	.\srmath.py	/^EPSILON = 0.00001$/;"	v	language:Python
GREEN	.\color.py	/^GREEN = (0, 255, 0)$/;"	v	language:Python
GREY	.\color.py	/^GREY = (128, 128, 128)$/;"	v	language:Python
Image	window.py	/^from PIL import Image, ImageTk$/;"	i
ImageTk	window.py	/^from PIL import Image, ImageTk$/;"	i
MODEL_SPACE	.\space.py	/^	MODEL_SPACE = 1$/;"	v	language:Python	class:SpaceType
Pipeline	pipeline.py	/^class Pipeline(object):$/;"	c
Plane	.\simplemesh.py	/^class Plane(object):$/;"	c	language:Python
RED	.\color.py	/^RED = (255, 0, 0)$/;"	v	language:Python
RasterizeInput	pipeline.py	/^class RasterizeInput(object):$/;"	c
Scene	scene.py	/^class Scene(object):$/;"	c
SpaceType	.\space.py	/^class SpaceType(object):$/;"	c	language:Python
TEXTURE_MAP	pipeline.py	/^	TEXTURE_MAP = 3$/;"	v	class:DrawMode
Texture	.\texture.py	/^class Texture(buffer3d.Buffer3D):$/;"	c	language:Python
Tkinter	window.py	/^import Tkinter$/;"	i
VERTEX_COLOR	pipeline.py	/^	VERTEX_COLOR = 2$/;"	v	class:DrawMode
VIEW_SPACE	.\space.py	/^	VIEW_SPACE = 3$/;"	v	language:Python	class:SpaceType
VertexInput	pipeline.py	/^class VertexInput(object):$/;"	c
WHITE	.\color.py	/^WHITE = (255, 255, 255)$/;"	v	language:Python
WIRE_FRAME	pipeline.py	/^	WIRE_FRAME = 1$/;"	v	class:DrawMode
WORLD_SPACE	.\space.py	/^	WORLD_SPACE = 2$/;"	v	language:Python	class:SpaceType
WindingOrder	pipeline.py	/^class WindingOrder(object):$/;"	c
Window	window.py	/^class Window(object):$/;"	c
YELLOW	.\color.py	/^YELLOW = (255, 255, 0)$/;"	v	language:Python
__add__	.\srmath.py	/^	def __add__(self, m):$/;"	m	language:Python	class:mat3	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec2	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec3	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec4	file:
__div__	.\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec2	file:
__div__	.\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec3	file:
__div__	.\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec4	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec2	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec3	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec4	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, xy):$/;"	m	language:Python	class:mat3	file:
__init__	.\buffer3d.py	/^	def __init__(self, w, h, initialValue = None):$/;"	m	language:Python	class:Buffer3D
__init__	.\camera.py	/^	def __init__(self):$/;"	m	language:Python	class:Camera
__init__	.\simplemesh.py	/^	def __init__(self, size = 1):$/;"	m	language:Python	class:Cube
__init__	.\simplemesh.py	/^	def __init__(self, width = 1, height = 1):$/;"	m	language:Python	class:Plane
__init__	.\srmath.py	/^	def __init__(self, matList=None):$/;"	m	language:Python	class:mat3
__init__	.\srmath.py	/^	def __init__(self, matList=None):$/;"	m	language:Python	class:mat4
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0):$/;"	m	language:Python	class:vec2
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0):$/;"	m	language:Python	class:vec3
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0, w = 0.0):$/;"	m	language:Python	class:vec4
__init__	.\texture.py	/^	def __init__(self, w, h):$/;"	m	language:Python	class:Texture
__init__	pipeline.py	/^	def __init__(self):$/;"	m	class:Pipeline
__init__	pipeline.py	/^	def __init__(self):$/;"	m	class:RasterizeInput
__init__	pipeline.py	/^	def __init__(self):$/;"	m	class:VertexInput
__init__	scene.py	/^	def __init__(self, graphicsPipeline):$/;"	m	class:Scene
__init__	window.py	/^	def __init__(self, graphicsPipeline):$/;"	m	class:Window
__iter__	.\srmath.py	/^	def __iter__(self):$/;"	m	language:Python	class:vec2	file:
__mul__	.\srmath.py	/^	def __mul__(self, multiplier):$/;"	m	language:Python	class:mat3	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec2	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec3	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec4	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:mat3	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec2	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec3	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec4	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec2	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec3	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec4	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, xy, val):$/;"	m	language:Python	class:mat3	file:
__sub__	.\srmath.py	/^	def __sub__(self, m):$/;"	m	language:Python	class:mat3	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec2	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec3	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec4	file:
_pipelineInstance	pipeline.py	/^_pipelineInstance = None$/;"	v
adjugateMat	.\srmath.py	/^	def adjugateMat(self):$/;"	m	language:Python	class:mat3
adjugateMat	.\srmath.py	/^	def adjugateMat(self):$/;"	m	language:Python	class:mat4
buffer3d	.\texture.py	/^import buffer3d$/;"	i	language:Python
buffer3d	pipeline.py	/^import buffer3d$/;"	i
calc_vertex_attribute	pipeline.py	/^	def calc_vertex_attribute(self, mvp, vertexInput, mode):$/;"	m	class:Pipeline
camera	scene.py	/^import camera$/;"	i
change_fov	window.py	/^	def change_fov(self, event):$/;"	m	class:Window
clamp	.\srmath.py	/^def clamp(x, minVal, maxVal):$/;"	f	language:Python
clear_depth_buffer	pipeline.py	/^	def clear_depth_buffer(self):$/;"	m	class:Pipeline
clear_screen	pipeline.py	/^	def clear_screen(self):$/;"	m	class:Pipeline
collections	.\srmath.py	/^import collections$/;"	i	language:Python
color	pipeline.py	/^import color$/;"	i
color	scene.py	/^import color$/;"	i
create_chess_board_texture	.\texture.py	/^def create_chess_board_texture(w, h, color0, color1, cells = 5):$/;"	f	language:Python
create_vector	.\srmath.py	/^def create_vector(componentCount):$/;"	f	language:Python
cross	.\srmath.py	/^	def cross(self, v):$/;"	m	language:Python	class:vec3
cull_back_face	pipeline.py	/^	def cull_back_face(self, v0, v1, v2):$/;"	m	class:Pipeline
destroy_window	window.py	/^	def destroy_window(self, event):$/;"	m	class:Window
determinant	.\srmath.py	/^	def determinant(self):$/;"	m	language:Python	class:mat3
determinant	.\srmath.py	/^	def determinant(self):$/;"	m	language:Python	class:mat4
doInit	.\srmath.py	/^	def doInit(self, matList):$/;"	m	language:Python	class:mat3
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec2
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec3
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec4
draw_cube	scene.py	/^	def draw_cube(self):$/;"	m	class:Scene
draw_flat_triangle	pipeline.py	/^	def draw_flat_triangle(self, v0, v1, v2, mode):$/;"	m	class:Pipeline
draw_line	pipeline.py	/^	def draw_line(self, x0, y0, x1, y1, color):$/;"	m	class:Pipeline
draw_mesh	pipeline.py	/^	def draw_mesh(self, mesh, cam, worldMatrix = srmath.mat4.identity, wireframeColor = color.WHITE, mode = DrawMode.WIRE_FRAME):$/;"	m	class:Pipeline
draw_plane	scene.py	/^	def draw_plane(self):$/;"	m	class:Scene
draw_point	pipeline.py	/^	def draw_point(self, x, y, color):$/;"	m	class:Pipeline
draw_scanline	pipeline.py	/^	def draw_scanline(self, left, right, y, mode):$/;"	m	class:Pipeline
draw_triangle	pipeline.py	/^	def draw_triangle(self, v0, v1, v2, mode, color):$/;"	m	class:Pipeline
draw_triangle_wireframe	pipeline.py	/^	def draw_triangle_wireframe(self, v0, v1, v2, color):$/;"	m	class:Pipeline
fast_inverse_mat4	.\srmath.py	/^def fast_inverse_mat4(m):$/;"	f	language:Python
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec2
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec3
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec4
getInverseMat	.\srmath.py	/^	def getInverseMat(self):$/;"	m	language:Python	class:mat3
getInverseMat	.\srmath.py	/^	def getInverseMat(self):$/;"	m	language:Python	class:mat4
get_depth	pipeline.py	/^	def get_depth(self, x, y):$/;"	m	class:Pipeline
get_flat_triangles	pipeline.py	/^	def get_flat_triangles(self, v0, v1, v2):$/;"	m	class:Pipeline
get_pipeline	pipeline.py	/^def get_pipeline():$/;"	f
get_pixel	pipeline.py	/^	def get_pixel(self, x, y):$/;"	m	class:Pipeline
get_projection_mat	.\camera.py	/^	def get_projection_mat(self):$/;"	m	language:Python	class:Camera
get_value	.\buffer3d.py	/^	def get_value(self, x, y, default=None):$/;"	m	language:Python	class:Buffer3D
get_world_to_view_mat	.\camera.py	/^	def get_world_to_view_mat(self):$/;"	m	language:Python	class:Camera
init	pipeline.py	/^	def init(self):$/;"	m	class:Pipeline
init	window.py	/^	def init(self):$/;"	m	class:Window
interpolate_rasterize_input	pipeline.py	/^	def interpolate_rasterize_input(self, v0, v1, t):$/;"	m	class:Pipeline
length	.\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec2
length	.\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec3
length	.\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec4
lerp	.\srmath.py	/^def lerp(val0, val1, t):$/;"	f	language:Python
look_at	.\camera.py	/^	def look_at(self, at, up = srmath.vec3(0, 1, 0)):$/;"	m	language:Python	class:Camera
make_inv_view_mat	.\srmath.py	/^def make_inv_view_mat(eye, lookat, up):$/;"	f	language:Python
make_inv_view_mat_axies	.\srmath.py	/^def make_inv_view_mat_axies(xAxis, yAxis, zAxis, eye):$/;"	f	language:Python
make_perspect_mat	.\srmath.py	/^def make_perspect_mat(near, far, left, right, top, bottom):$/;"	f	language:Python
make_perspect_mat_fov	.\srmath.py	/^def make_perspect_mat_fov(aspectRatio, near, far, fov):$/;"	f	language:Python
make_rotation_mat	.\srmath.py	/^def make_rotation_mat(direction, angle):$/;"	f	language:Python
make_rotation_x_mat	.\srmath.py	/^def make_rotation_x_mat(xAngle):$/;"	f	language:Python
make_rotation_y_mat	.\srmath.py	/^def make_rotation_y_mat(yAngle):$/;"	f	language:Python
make_rotation_z_mat	.\srmath.py	/^def make_rotation_z_mat(zAngle):$/;"	f	language:Python
make_scale_mat	.\srmath.py	/^def make_scale_mat(scale):$/;"	f	language:Python
make_translation_mat	.\srmath.py	/^def make_translation_mat(translation):$/;"	f	language:Python
make_view_mat	.\srmath.py	/^def make_view_mat(eye, lookat, up):$/;"	f	language:Python
make_view_mat_axis	.\srmath.py	/^def make_view_mat_axis(xAxis, yAxis, zAxis, eye):$/;"	f	language:Python
mat3	.\srmath.py	/^class mat3(object):$/;"	c	language:Python
mat4	.\srmath.py	/^class mat4(mat3):$/;"	c	language:Python
math	.\simplemesh.py	/^import math$/;"	i	language:Python
math	.\srmath.py	/^import math$/;"	i	language:Python
move	.\camera.py	/^	def move(self, offset, st = space.SpaceType.VIEW_SPACE):$/;"	m	language:Python	class:Camera
move_camera	scene.py	/^	def move_camera(self, offset, st = space.SpaceType.VIEW_SPACE):$/;"	m	class:Scene
move_camera	window.py	/^	def move_camera(self, event, direction):$/;"	m	class:Window
multipliableVecType	.\srmath.py	/^	def multipliableVecType(self):$/;"	m	language:Python	class:mat3
multipliableVecType	.\srmath.py	/^	def multipliableVecType(self):$/;"	m	language:Python	class:mat4
ndc_to_screen_coord	.\srmath.py	/^def ndc_to_screen_coord(ndcPoint, width, height):$/;"	f	language:Python
negate	.\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec2
negate	.\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec3
negate	.\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec4
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec2
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec3
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec4
on_key_down	window.py	/^	def on_key_down(self, event):$/;"	m	class:Window
on_mouse_click	window.py	/^	def on_mouse_click(self, event):$/;"	m	class:Window
pipeline	main.py	/^import pipeline$/;"	i
pipeline	scene.py	/^import pipeline$/;"	i
put_value	.\buffer3d.py	/^	def put_value(self, x, y, value):$/;"	m	language:Python	class:Buffer3D
sample_texture	pipeline.py	/^	def sample_texture(self, tex, uv):$/;"	m	class:Pipeline
save_depth_texture	window.py	/^	def save_depth_texture(self):$/;"	m	class:Window
save_texture	window.py	/^	def save_texture(self, tex, filename):$/;"	m	class:Window
scene	window.py	/^import scene$/;"	i
set_all_value	.\buffer3d.py	/^	def set_all_value(self, value):$/;"	m	language:Python	class:Buffer3D
set_depth	pipeline.py	/^	def set_depth(self, x, y, value):$/;"	m	class:Pipeline
set_front_face	pipeline.py	/^	def set_front_face(self, face):$/;"	m	class:Pipeline
simplemesh	scene.py	/^import simplemesh$/;"	i
space	.\camera.py	/^import space$/;"	i	language:Python
space	scene.py	/^import space$/;"	i
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec2
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec3
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec4
srmath	.\camera.py	/^import srmath$/;"	i	language:Python
srmath	pipeline.py	/^import srmath$/;"	i
srmath	scene.py	/^import srmath$/;"	i
srmath	window.py	/^import srmath$/;"	i
swapElements	.\srmath.py	/^	def swapElements(self, idx0, idx1):$/;"	m	language:Python	class:mat3
texture	pipeline.py	/^import texture$/;"	i
texture	window.py	/^import texture$/;"	i
time	window.py	/^import time$/;"	i
toList	.\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec2
toList	.\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec3
toList	.\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec4
transpose	.\srmath.py	/^	def transpose(self):$/;"	m	language:Python	class:mat3
transpose	.\srmath.py	/^	def transpose(self):$/;"	m	language:Python	class:mat4
update	scene.py	/^	def update(self):$/;"	m	class:Scene
update_screen	window.py	/^	def update_screen(self):$/;"	m	class:Window
update_statistic_info	window.py	/^	def update_statistic_info(self):$/;"	m	class:Window
vec2	.\srmath.py	/^class vec2(object):$/;"	c	language:Python
vec3	.\srmath.py	/^class vec3(object):$/;"	c	language:Python
vec4	.\srmath.py	/^class vec4(object):$/;"	c	language:Python
w	main.py	/^	w = window.Window(pipeline.get_pipeline())$/;"	v
window	main.py	/^import window$/;"	i
window_update	window.py	/^	def window_update(self):$/;"	m	class:Window
