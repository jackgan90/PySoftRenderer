!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
BLACK	.\\color.py	/^BLACK = (0, 0, 0)$/;"	v	language:Python
BLUE	.\\color.py	/^BLUE = (0, 0, 255)$/;"	v	language:Python
Buffer3D	.\\buffer3d.py	/^class Buffer3D(resource.Resource):$/;"	c	language:Python
CCW	.\\rasterizer.py	/^	CCW = 2$/;"	v	language:Python	class:WindingOrder
CW	.\\rasterizer.py	/^	CW = 1$/;"	v	language:Python	class:WindingOrder
Camera	.\\camera.py	/^class Camera(object):$/;"	c	language:Python
Cube	.\\simplemesh.py	/^class Cube(object):$/;"	c	language:Python
DEFAULT_FRAME_RATE	.\\window.py	/^DEFAULT_FRAME_RATE = 30$/;"	v	language:Python
DEFAULT_WINDOW_HEIGHT	.\\pipeline.py	/^DEFAULT_WINDOW_HEIGHT = 400$/;"	v	language:Python
DEFAULT_WINDOW_WIDTH	.\\pipeline.py	/^DEFAULT_WINDOW_WIDTH = 400$/;"	v	language:Python
DrawMode	.\\pipeline.py	/^class DrawMode(object):$/;"	c	language:Python
EPSILON	.\\srmath.py	/^EPSILON = 0.00001$/;"	v	language:Python
FILL	.\\pipeline.py	/^	FILL = 2$/;"	v	language:Python	class:DrawMode
FragmentProcessor	.\\fragmentprocessor.py	/^class FragmentProcessor(object):$/;"	c	language:Python
FragmentShader	.\\shader.py	/^class FragmentShader(Shader):$/;"	c	language:Python
GL	.\\test.py	/^import OpenGL.GL as GL$/;"	I	language:Python
GL	openglwindow.py	/^import OpenGL.GL as GL$/;"	i
GLUT	openglwindow.py	/^import OpenGL.GLUT as GLUT$/;"	i
GREEN	.\\color.py	/^GREEN = (0, 255, 0)$/;"	v	language:Python
GREY	.\\color.py	/^GREY = (128, 128, 128)$/;"	v	language:Python
MODEL_SPACE	.\\space.py	/^	MODEL_SPACE = 1$/;"	v	language:Python	class:SpaceType
OpenGL	openglwindow.py	/^import OpenGL.GL as GL$/;"	i
OpenGL	openglwindow.py	/^import OpenGL.GLUT as GLUT$/;"	i
OpenGLWindow	openglwindow.py	/^class OpenGLWindow(Window):$/;"	c
Pipeline	.\\pipeline.py	/^class Pipeline(object):$/;"	c	language:Python
Plane	.\\simplemesh.py	/^class Plane(object):$/;"	c	language:Python
Program	.\\program.py	/^class Program(Resource):$/;"	c	language:Python
PyGameWindow	.\\pygamewindow.py	/^class PyGameWindow(Window):$/;"	c	language:Python
RED	.\\color.py	/^RED = (255, 0, 0)$/;"	v	language:Python
RasterizeData	.\\rasterizer.py	/^class RasterizeData(object):$/;"	c	language:Python
RasterizeInput	.\\pipeline.py	/^class RasterizeInput(object):$/;"	c	language:Python
RasterizeInput	.\\rasterizer.py	/^class RasterizeInput(object):$/;"	c	language:Python
Rasterizer	.\\rasterizer.py	/^class Rasterizer(object):$/;"	c	language:Python
Resource	.\\resource.py	/^class Resource(object):$/;"	c	language:Python
Scene	.\\scene.py	/^class Scene(object):$/;"	c	language:Python
Shader	.\\shader.py	/^class Shader(Resource):$/;"	c	language:Python
ShaderMgr	.\\shadermgr.py	/^class ShaderMgr(object):$/;"	c	language:Python
SpaceType	.\\space.py	/^class SpaceType(object):$/;"	c	language:Python
Texture	.\\texture.py	/^class Texture(buffer3d.Buffer3D):$/;"	c	language:Python
TextureFS	.\\shader.py	/^class TextureFS(FragmentShader):$/;"	c	language:Python
TextureMgr	.\\texturemgr.py	/^class TextureMgr(object):$/;"	c	language:Python
TextureVS	.\\shader.py	/^class TextureVS(VertexShader):$/;"	c	language:Python
TkinterWindow	.\\tkinterwindow.py	/^class TkinterWindow(Window):$/;"	c	language:Python
VIEW_SPACE	.\\space.py	/^	VIEW_SPACE = 3$/;"	v	language:Python	class:SpaceType
VertexColorFS	.\\shader.py	/^class VertexColorFS(FragmentShader):$/;"	c	language:Python
VertexColorVS	.\\shader.py	/^class VertexColorVS(VertexShader):$/;"	c	language:Python
VertexInput	.\\pipeline.py	/^class VertexInput(object):$/;"	c	language:Python
VertexProcessor	.\\vertexprocessor.py	/^class VertexProcessor(object):$/;"	c	language:Python
VertexShader	.\\shader.py	/^class VertexShader(Shader):$/;"	c	language:Python
WHITE	.\\color.py	/^WHITE = (255, 255, 255)$/;"	v	language:Python
WINDOW_SYSTEM	.\\config.py	/^WINDOW_SYSTEM = 'opengl'$/;"	v	language:Python
WIRE_FRAME	.\\pipeline.py	/^	WIRE_FRAME = 1$/;"	v	language:Python	class:DrawMode
WORLD_SPACE	.\\space.py	/^	WORLD_SPACE = 2$/;"	v	language:Python	class:SpaceType
WindingOrder	.\\rasterizer.py	/^class WindingOrder(object):$/;"	c	language:Python
Window	.\\window.py	/^class Window(object):$/;"	c	language:Python
Window	openglwindow.py	/^from window import Window$/;"	i
YELLOW	.\\color.py	/^YELLOW = (255, 255, 0)$/;"	v	language:Python
__add__	.\\srmath.py	/^	def __add__(self, m):$/;"	m	language:Python	class:mat3	signature:(self, m)
__add__	.\\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec2	signature:(self, v)
__add__	.\\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec3	signature:(self, v)
__add__	.\\srmath.py	/^	def __add__(self, v):$/;"	m	language:Python	class:vec4	signature:(self, v)
__div__	.\\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec2	signature:(self, scalar)
__div__	.\\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec3	signature:(self, scalar)
__div__	.\\srmath.py	/^	def __div__(self, scalar):$/;"	m	language:Python	class:vec4	signature:(self, scalar)
__getitem__	.\\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec2	signature:(self, i)
__getitem__	.\\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec3	signature:(self, i)
__getitem__	.\\srmath.py	/^	def __getitem__(self, i):$/;"	m	language:Python	class:vec4	signature:(self, i)
__getitem__	.\\srmath.py	/^	def __getitem__(self, xy):$/;"	m	language:Python	class:mat3	signature:(self, xy)
__init__	.\\buffer3d.py	/^	def __init__(self, w, h, initialValue = None):$/;"	m	language:Python	class:Buffer3D	signature:(self, w, h, initialValue = None)
__init__	.\\camera.py	/^	def __init__(self):$/;"	m	language:Python	class:Camera	signature:(self)
__init__	.\\fragmentprocessor.py	/^	def __init__(self, pipeline):$/;"	m	language:Python	class:FragmentProcessor	signature:(self, pipeline)
__init__	.\\pipeline.py	/^	def __init__(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
__init__	.\\pipeline.py	/^	def __init__(self):$/;"	m	language:Python	class:RasterizeInput	signature:(self)
__init__	.\\pipeline.py	/^	def __init__(self):$/;"	m	language:Python	class:VertexInput	signature:(self)
__init__	.\\program.py	/^	def __init__(self):$/;"	m	language:Python	class:Program	signature:(self)
__init__	.\\pygamewindow.py	/^	def __init__(self, graphicsPipeline):$/;"	m	language:Python	class:PyGameWindow	signature:(self, graphicsPipeline)
__init__	.\\rasterizer.py	/^	def __init__(self):$/;"	m	language:Python	class:RasterizeData	signature:(self)
__init__	.\\rasterizer.py	/^	def __init__(self):$/;"	m	language:Python	class:RasterizeInput	signature:(self)
__init__	.\\rasterizer.py	/^	def __init__(self, graphicsPipeline):$/;"	m	language:Python	class:Rasterizer	signature:(self, graphicsPipeline)
__init__	.\\resource.py	/^	def __init__(self):$/;"	m	language:Python	class:Resource	signature:(self)
__init__	.\\scene.py	/^	def __init__(self, graphicsPipeline):$/;"	m	language:Python	class:Scene	signature:(self, graphicsPipeline)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:FragmentShader	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:Shader	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:TextureFS	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:TextureVS	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:VertexColorFS	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:VertexColorVS	signature:(self)
__init__	.\\shader.py	/^	def __init__(self):$/;"	m	language:Python	class:VertexShader	signature:(self)
__init__	.\\shadermgr.py	/^	def __init__(self):$/;"	m	language:Python	class:ShaderMgr	signature:(self)
__init__	.\\simplemesh.py	/^	def __init__(self, size = 1):$/;"	m	language:Python	class:Cube	signature:(self, size = 1)
__init__	.\\simplemesh.py	/^	def __init__(self, width = 1, height = 1):$/;"	m	language:Python	class:Plane	signature:(self, width = 1, height = 1)
__init__	.\\srmath.py	/^	def __init__(self, matList=None):$/;"	m	language:Python	class:mat3	signature:(self, matList=None)
__init__	.\\srmath.py	/^	def __init__(self, matList=None):$/;"	m	language:Python	class:mat4	signature:(self, matList=None)
__init__	.\\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0):$/;"	m	language:Python	class:vec2	signature:(self, x = 0.0, y = 0.0)
__init__	.\\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0):$/;"	m	language:Python	class:vec3	signature:(self, x = 0.0, y = 0.0, z = 0.0)
__init__	.\\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0, w = 0.0):$/;"	m	language:Python	class:vec4	signature:(self, x = 0.0, y = 0.0, z = 0.0, w = 0.0)
__init__	.\\texture.py	/^	def __init__(self, w, h):$/;"	m	language:Python	class:Texture	signature:(self, w, h)
__init__	.\\texturemgr.py	/^	def __init__(self):$/;"	m	language:Python	class:TextureMgr	signature:(self)
__init__	.\\tkinterwindow.py	/^	def __init__(self, graphicsPipeline):$/;"	m	language:Python	class:TkinterWindow	signature:(self, graphicsPipeline)
__init__	.\\vertexprocessor.py	/^	def __init__(self, pipeline):$/;"	m	language:Python	class:VertexProcessor	signature:(self, pipeline)
__init__	.\\window.py	/^	def __init__(self, graphicsPipeline):$/;"	m	language:Python	class:Window	signature:(self, graphicsPipeline)
__init__	openglwindow.py	/^	def __init__(self, graphicsPipeline):$/;"	m	class:OpenGLWindow
__iter__	.\\srmath.py	/^	def __iter__(self):$/;"	m	language:Python	class:vec2	signature:(self)
__mul__	.\\srmath.py	/^	def __mul__(self, multiplier):$/;"	m	language:Python	class:mat3	signature:(self, multiplier)
__mul__	.\\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec2	signature:(self, scalar)
__mul__	.\\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec3	signature:(self, scalar)
__mul__	.\\srmath.py	/^	def __mul__(self, scalar):$/;"	m	language:Python	class:vec4	signature:(self, scalar)
__repr__	.\\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:mat3	signature:(self)
__repr__	.\\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec2	signature:(self)
__repr__	.\\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec3	signature:(self)
__repr__	.\\srmath.py	/^	def __repr__(self):$/;"	m	language:Python	class:vec4	signature:(self)
__setitem__	.\\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec2	signature:(self, i, val)
__setitem__	.\\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec3	signature:(self, i, val)
__setitem__	.\\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	language:Python	class:vec4	signature:(self, i, val)
__setitem__	.\\srmath.py	/^	def __setitem__(self, xy, val):$/;"	m	language:Python	class:mat3	signature:(self, xy, val)
__sub__	.\\srmath.py	/^	def __sub__(self, m):$/;"	m	language:Python	class:mat3	signature:(self, m)
__sub__	.\\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec2	signature:(self, v)
__sub__	.\\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec3	signature:(self, v)
__sub__	.\\srmath.py	/^	def __sub__(self, v):$/;"	m	language:Python	class:vec4	signature:(self, v)
_current_id	.\\helpers.py	/^_current_id = 0$/;"	v	language:Python
_instance	.\\shadermgr.py	/^_instance = None$/;"	v	language:Python
_instance	.\\texturemgr.py	/^_instance = None$/;"	v	language:Python
_pipelineInstance	.\\pipeline.py	/^_pipelineInstance = None$/;"	v	language:Python
adjugateMat	.\\srmath.py	/^	def adjugateMat(self):$/;"	m	language:Python	class:mat3	signature:(self)
adjugateMat	.\\srmath.py	/^	def adjugateMat(self):$/;"	m	language:Python	class:mat4	signature:(self)
check_cvv_out	.\\rasterizer.py	/^	def check_cvv_out(self, rasterInput):$/;"	m	language:Python	class:Rasterizer	signature:(self, rasterInput)
clamp	.\\srmath.py	/^def clamp(x, minVal, maxVal):$/;"	f	language:Python	signature:(x, minVal, maxVal)
clear_depth_buffer	.\\pipeline.py	/^	def clear_depth_buffer(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
clear_screen	.\\pipeline.py	/^	def clear_screen(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
create_chess_board_texture	.\\texturemgr.py	/^	def create_chess_board_texture(self, w, h, color0, color1, cells = 5):$/;"	m	language:Python	class:TextureMgr	signature:(self, w, h, color0, color1, cells = 5)
create_object	.\\test.py	/^def create_object(shader):$/;"	f	language:Python	signature:(shader)
create_program	.\\shadermgr.py	/^	def create_program(self):$/;"	m	language:Python	class:ShaderMgr	signature:(self)
create_shader	.\\shadermgr.py	/^	def create_shader(self, name):$/;"	m	language:Python	class:ShaderMgr	signature:(self, name)
create_vector	.\\srmath.py	/^def create_vector(componentCount):$/;"	f	language:Python	signature:(componentCount)
cross	.\\srmath.py	/^	def cross(self, v):$/;"	m	language:Python	class:vec3	signature:(self, v)
ctypes	openglwindow.py	/^import ctypes$/;"	i
cull_back_face	.\\rasterizer.py	/^	def cull_back_face(self, rasterDatas):$/;"	m	language:Python	class:Rasterizer	signature:(self, rasterDatas)
cull_cvv	.\\rasterizer.py	/^	def cull_cvv(self, cvvOutTypes):$/;"	m	language:Python	class:Rasterizer	signature:(self, cvvOutTypes)
destroy_window	.\\tkinterwindow.py	/^	def destroy_window(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
destroy_window	.\\window.py	/^	def destroy_window(self):$/;"	m	language:Python	class:Window	signature:(self)
determinant	.\\srmath.py	/^	def determinant(self):$/;"	m	language:Python	class:mat3	signature:(self)
determinant	.\\srmath.py	/^	def determinant(self):$/;"	m	language:Python	class:mat4	signature:(self)
display	.\\test.py	/^def display(shader, vertex_array_object):$/;"	f	language:Python	signature:(shader, vertex_array_object)
doInit	.\\srmath.py	/^	def doInit(self, matList):$/;"	m	language:Python	class:mat3	signature:(self, matList)
dot	.\\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec2	signature:(self, v)
dot	.\\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec3	signature:(self, v)
dot	.\\srmath.py	/^	def dot(self, v):$/;"	m	language:Python	class:vec4	signature:(self, v)
draw_cube	.\\scene.py	/^	def draw_cube(self):$/;"	m	language:Python	class:Scene	signature:(self)
draw_mesh	.\\pipeline.py	/^	def draw_mesh(self, mesh, cam, program, worldMat = srmath.mat4.identity, wireframeColor = color/;"	m	language:Python	class:Pipeline	signature:(self, mesh, cam, program, worldMat = srmath.mat4.identity, wireframeColor = color.WHITE, mode = DrawMode.WIRE_FRAME)
draw_plane	.\\scene.py	/^	def draw_plane(self):$/;"	m	language:Python	class:Scene	signature:(self)
draw_scanline	.\\rasterizer.py	/^	def draw_scanline(self, left, right, y, mode, shader):$/;"	m	language:Python	class:Rasterizer	signature:(self, left, right, y, mode, shader)
fast_inverse_mat4	.\\srmath.py	/^def fast_inverse_mat4(m):$/;"	f	language:Python	signature:(m)
fragment_shader	.\\test.py	/^fragment_shader = """$/;"	v	language:Python
fromList	.\\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec2	signature:(self, l)
fromList	.\\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec3	signature:(self, l)
fromList	.\\srmath.py	/^	def fromList(self, l):$/;"	m	language:Python	class:vec4	signature:(self, l)
getGLError	openglwindow.py	/^	def getGLError(self):$/;"	m	class:OpenGLWindow
getInverseMat	.\\srmath.py	/^	def getInverseMat(self):$/;"	m	language:Python	class:mat3	signature:(self)
getInverseMat	.\\srmath.py	/^	def getInverseMat(self):$/;"	m	language:Python	class:mat4	signature:(self)
get_depth	.\\pipeline.py	/^	def get_depth(self, x, y):$/;"	m	language:Python	class:Pipeline	signature:(self, x, y)
get_flat_triangles	.\\rasterizer.py	/^	def get_flat_triangles(self, v0, v1, v2):$/;"	m	language:Python	class:Rasterizer	signature:(self, v0, v1, v2)
get_frame_buffer_data	.\\pipeline.py	/^	def get_frame_buffer_data(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
get_frame_buffer_dimension	.\\pipeline.py	/^	def get_frame_buffer_dimension(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
get_pipeline	.\\pipeline.py	/^def get_pipeline():$/;"	f	language:Python	signature:()
get_pipeline_uniform	.\\pipeline.py	/^	def get_pipeline_uniform(self, uniform):$/;"	m	language:Python	class:Pipeline	signature:(self, uniform)
get_pixel	.\\pipeline.py	/^	def get_pixel(self, x, y):$/;"	m	language:Python	class:Pipeline	signature:(self, x, y)
get_projection_mat	.\\camera.py	/^	def get_projection_mat(self):$/;"	m	language:Python	class:Camera	signature:(self)
get_shader_mgr	.\\shadermgr.py	/^def get_shader_mgr():$/;"	f	language:Python	signature:()
get_tex_mgr	.\\texturemgr.py	/^def get_tex_mgr():$/;"	f	language:Python	signature:()
get_unique_id	.\\helpers.py	/^def get_unique_id():$/;"	f	language:Python	signature:()
get_value	.\\buffer3d.py	/^	def get_value(self, x, y, default=None):$/;"	m	language:Python	class:Buffer3D	signature:(self, x, y, default=None)
get_world_to_view_mat	.\\camera.py	/^	def get_world_to_view_mat(self):$/;"	m	language:Python	class:Camera	signature:(self)
has_pipeline_uniform	.\\pipeline.py	/^	def has_pipeline_uniform(self, uniform):$/;"	m	language:Python	class:Pipeline	signature:(self, uniform)
init	.\\pipeline.py	/^	def init(self):$/;"	m	language:Python	class:Pipeline	signature:(self)
init	.\\pygamewindow.py	/^	def init(self):$/;"	m	language:Python	class:PyGameWindow	signature:(self)
init	.\\tkinterwindow.py	/^	def init(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
init	.\\window.py	/^	def init(self):$/;"	m	language:Python	class:Window	signature:(self)
init	openglwindow.py	/^	def init(self):$/;"	m	class:OpenGLWindow
init_gl	openglwindow.py	/^	def init_gl(self):$/;"	m	class:OpenGLWindow
init_opengl_texture	openglwindow.py	/^	def init_opengl_texture(self, pixelData):$/;"	m	class:OpenGLWindow
init_raster_data	.\\rasterizer.py	/^	def init_raster_data(self, rasterInput):$/;"	m	language:Python	class:Rasterizer	signature:(self, rasterInput)
interpolate_rasterize_data	.\\rasterizer.py	/^	def interpolate_rasterize_data(self, v0, v1, t):$/;"	m	language:Python	class:Rasterizer	signature:(self, v0, v1, t)
length	.\\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec2	signature:(self)
length	.\\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec3	signature:(self)
length	.\\srmath.py	/^	def length(self):$/;"	m	language:Python	class:vec4	signature:(self)
lerp	.\\srmath.py	/^def lerp(val0, val1, t):$/;"	f	language:Python	signature:(val0, val1, t)
look_at	.\\camera.py	/^	def look_at(self, at, up = srmath.vec3(0, 1, 0)):$/;"	m	language:Python	class:Camera	signature:(self, at, up = srmath.vec3(0, 1, 0))
main	.\\test.py	/^def main():$/;"	f	language:Python	signature:()
make_inv_view_mat	.\\srmath.py	/^def make_inv_view_mat(eye, lookat, up):$/;"	f	language:Python	signature:(eye, lookat, up)
make_inv_view_mat_axies	.\\srmath.py	/^def make_inv_view_mat_axies(xAxis, yAxis, zAxis, eye):$/;"	f	language:Python	signature:(xAxis, yAxis, zAxis, eye)
make_perspect_mat	.\\srmath.py	/^def make_perspect_mat(near, far, left, right, top, bottom):$/;"	f	language:Python	signature:(near, far, left, right, top, bottom)
make_perspect_mat_fov	.\\srmath.py	/^def make_perspect_mat_fov(aspectRatio, near, far, fov):$/;"	f	language:Python	signature:(aspectRatio, near, far, fov)
make_rotation_mat	.\\srmath.py	/^def make_rotation_mat(direction, angle):$/;"	f	language:Python	signature:(direction, angle)
make_rotation_x_mat	.\\srmath.py	/^def make_rotation_x_mat(xAngle):$/;"	f	language:Python	signature:(xAngle)
make_rotation_y_mat	.\\srmath.py	/^def make_rotation_y_mat(yAngle):$/;"	f	language:Python	signature:(yAngle)
make_rotation_z_mat	.\\srmath.py	/^def make_rotation_z_mat(zAngle):$/;"	f	language:Python	signature:(zAngle)
make_scale_mat	.\\srmath.py	/^def make_scale_mat(scale):$/;"	f	language:Python	signature:(scale)
make_translation_mat	.\\srmath.py	/^def make_translation_mat(translation):$/;"	f	language:Python	signature:(translation)
make_view_mat	.\\srmath.py	/^def make_view_mat(eye, lookat, up):$/;"	f	language:Python	signature:(eye, lookat, up)
make_view_mat_axis	.\\srmath.py	/^def make_view_mat_axis(xAxis, yAxis, zAxis, eye):$/;"	f	language:Python	signature:(xAxis, yAxis, zAxis, eye)
mat3	.\\srmath.py	/^class mat3(object):$/;"	c	language:Python
mat4	.\\srmath.py	/^class mat4(mat3):$/;"	c	language:Python
move	.\\camera.py	/^	def move(self, offset, st = space.SpaceType.VIEW_SPACE):$/;"	m	language:Python	class:Camera	signature:(self, offset, st = space.SpaceType.VIEW_SPACE)
move_camera	.\\pygamewindow.py	/^	def move_camera(self, direction):$/;"	m	language:Python	class:PyGameWindow	signature:(self, direction)
move_camera	.\\scene.py	/^	def move_camera(self, offset, st = space.SpaceType.VIEW_SPACE):$/;"	m	language:Python	class:Scene	signature:(self, offset, st = space.SpaceType.VIEW_SPACE)
move_camera	.\\tkinterwindow.py	/^	def move_camera(self, direction):$/;"	m	language:Python	class:TkinterWindow	signature:(self, direction)
multipliableVecType	.\\srmath.py	/^	def multipliableVecType(self):$/;"	m	language:Python	class:mat3	signature:(self)
multipliableVecType	.\\srmath.py	/^	def multipliableVecType(self):$/;"	m	language:Python	class:mat4	signature:(self)
ndc_to_screen_coord	.\\srmath.py	/^def ndc_to_screen_coord(ndcPoint, width, height):$/;"	f	language:Python	signature:(ndcPoint, width, height)
negate	.\\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec2	signature:(self)
negate	.\\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec3	signature:(self)
negate	.\\srmath.py	/^	def negate(self):$/;"	m	language:Python	class:vec4	signature:(self)
normalize	.\\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec2	signature:(self)
normalize	.\\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec3	signature:(self)
normalize	.\\srmath.py	/^	def normalize(self):$/;"	m	language:Python	class:vec4	signature:(self)
numpy	openglwindow.py	/^import numpy$/;"	i
on_clear_frame_buffer	.\\pygamewindow.py	/^	def on_clear_frame_buffer(self):$/;"	m	language:Python	class:PyGameWindow	signature:(self)
on_frame_buffer_set_pixel	.\\pygamewindow.py	/^	def on_frame_buffer_set_pixel(self, x, y, color):$/;"	m	language:Python	class:PyGameWindow	signature:(self, x, y, color)
on_key_down	.\\pygamewindow.py	/^	def on_key_down(self, key):$/;"	m	language:Python	class:PyGameWindow	signature:(self, key)
on_key_down	.\\tkinterwindow.py	/^	def on_key_down(self, key):$/;"	m	language:Python	class:TkinterWindow	signature:(self, key)
on_key_down	.\\window.py	/^	def on_key_down(self, key):$/;"	m	language:Python	class:Window	signature:(self, key)
on_mouse_click	.\\tkinterwindow.py	/^	def on_mouse_click(self, x, y):$/;"	m	language:Python	class:TkinterWindow	signature:(self, x, y)
on_mouse_click	.\\window.py	/^	def on_mouse_click(self, x, y):$/;"	m	language:Python	class:Window	signature:(self, x, y)
on_mouse_wheel_scroll	.\\pygamewindow.py	/^	def on_mouse_wheel_scroll(self, delta):$/;"	m	language:Python	class:PyGameWindow	signature:(self, delta)
on_mouse_wheel_scroll	.\\tkinterwindow.py	/^	def on_mouse_wheel_scroll(self, delta):$/;"	m	language:Python	class:TkinterWindow	signature:(self, delta)
on_mouse_wheel_scroll	.\\window.py	/^	def on_mouse_wheel_scroll(self, delta):$/;"	m	language:Python	class:Window	signature:(self, delta)
process	.\\fragmentprocessor.py	/^	def process(self, rasterData, program):$/;"	m	language:Python	class:FragmentProcessor	signature:(self, rasterData, program)
process	.\\rasterizer.py	/^	def process(self, rasterInputs, mode, wireframeColor, shader):$/;"	m	language:Python	class:Rasterizer	signature:(self, rasterInputs, mode, wireframeColor, shader)
process	.\\vertexprocessor.py	/^	def process(self, mesh, indices, program):$/;"	m	language:Python	class:VertexProcessor	signature:(self, mesh, indices, program)
put_value	.\\buffer3d.py	/^	def put_value(self, x, y, value):$/;"	m	language:Python	class:Buffer3D	signature:(self, x, y, value)
rasterize_flat_triangle	.\\rasterizer.py	/^	def rasterize_flat_triangle(self, v0, v1, v2, mode, shader):$/;"	m	language:Python	class:Rasterizer	signature:(self, v0, v1, v2, mode, shader)
rasterize_line	.\\rasterizer.py	/^	def rasterize_line(self, x0, y0, x1, y1, color):$/;"	m	language:Python	class:Rasterizer	signature:(self, x0, y0, x1, y1, color)
rasterize_point	.\\rasterizer.py	/^	def rasterize_point(self, x, y, color):$/;"	m	language:Python	class:Rasterizer	signature:(self, x, y, color)
rasterize_triangle	.\\rasterizer.py	/^	def rasterize_triangle(self, rasterDatas, mode, color, shader):$/;"	m	language:Python	class:Rasterizer	signature:(self, rasterDatas, mode, color, shader)
rasterize_triangle_wireframe	.\\rasterizer.py	/^	def rasterize_triangle_wireframe(self, v0, v1, v2, color):$/;"	m	language:Python	class:Rasterizer	signature:(self, v0, v1, v2, color)
register_clear_screen_callback	.\\pipeline.py	/^	def register_clear_screen_callback(self, callback):$/;"	m	language:Python	class:Pipeline	signature:(self, callback)
register_event_listeners	.\\tkinterwindow.py	/^	def register_event_listeners(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
register_event_listeners	.\\window.py	/^	def register_event_listeners(self):$/;"	m	language:Python	class:Window	signature:(self)
register_set_pixel_callback	.\\pipeline.py	/^	def register_set_pixel_callback(self, callback):$/;"	m	language:Python	class:Pipeline	signature:(self, callback)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:FragmentShader	signature:(self)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:TextureFS	signature:(self)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:TextureVS	signature:(self)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:VertexColorFS	signature:(self)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:VertexColorVS	signature:(self)
run	.\\shader.py	/^	def run(self):$/;"	m	language:Python	class:VertexShader	signature:(self)
sample_texture	.\\pipeline.py	/^	def sample_texture(self, tex, uv):$/;"	m	language:Python	class:Pipeline	signature:(self, tex, uv)
sample_texture	.\\shader.py	/^	def sample_texture(self, tex, uv):$/;"	m	language:Python	class:Shader	signature:(self, tex, uv)
save_depth_texture	.\\tkinterwindow.py	/^	def save_depth_texture(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
save_texture	.\\tkinterwindow.py	/^	def save_texture(self, tex, filename):$/;"	m	language:Python	class:TkinterWindow	signature:(self, tex, filename)
set_all_value	.\\buffer3d.py	/^	def set_all_value(self, value):$/;"	m	language:Python	class:Buffer3D	signature:(self, value)
set_depth	.\\pipeline.py	/^	def set_depth(self, x, y, value):$/;"	m	language:Python	class:Pipeline	signature:(self, x, y, value)
set_front_face	.\\pipeline.py	/^	def set_front_face(self, face):$/;"	m	language:Python	class:Pipeline	signature:(self, face)
set_front_face	.\\rasterizer.py	/^	def set_front_face(self, face):$/;"	m	language:Python	class:Rasterizer	signature:(self, face)
set_pixel	.\\pipeline.py	/^	def set_pixel(self, x, y, color):$/;"	m	language:Python	class:Pipeline	signature:(self, x, y, color)
set_uniform	.\\shader.py	/^	def set_uniform(self, name, value):$/;"	m	language:Python	class:Shader	signature:(self, name, value)
set_varying	.\\shader.py	/^	def set_varying(self, name, value):$/;"	m	language:Python	class:Shader	signature:(self, name, value)
shaders	openglwindow.py	/^from OpenGL.GL import shaders$/;"	i
sqrLength	.\\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec2	signature:(self)
sqrLength	.\\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec3	signature:(self)
sqrLength	.\\srmath.py	/^	def sqrLength(self):$/;"	m	language:Python	class:vec4	signature:(self)
swapElements	.\\srmath.py	/^	def swapElements(self, idx0, idx1):$/;"	m	language:Python	class:mat3	signature:(self, idx0, idx1)
toList	.\\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec2	signature:(self)
toList	.\\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec3	signature:(self)
toList	.\\srmath.py	/^	def toList(self):$/;"	m	language:Python	class:vec4	signature:(self)
transpose	.\\srmath.py	/^	def transpose(self):$/;"	m	language:Python	class:mat3	signature:(self)
transpose	.\\srmath.py	/^	def transpose(self):$/;"	m	language:Python	class:mat4	signature:(self)
update	.\\scene.py	/^	def update(self):$/;"	m	language:Python	class:Scene	signature:(self)
update_screen	.\\pygamewindow.py	/^	def update_screen(self):$/;"	m	language:Python	class:PyGameWindow	signature:(self)
update_screen	.\\tkinterwindow.py	/^	def update_screen(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
update_screen	.\\window.py	/^	def update_screen(self):$/;"	m	language:Python	class:Window	signature:(self)
update_statistic_info	.\\pygamewindow.py	/^	def update_statistic_info(self):$/;"	m	language:Python	class:PyGameWindow	signature:(self)
update_statistic_info	.\\tkinterwindow.py	/^	def update_statistic_info(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
update_statistic_info	.\\window.py	/^	def update_statistic_info(self):$/;"	m	language:Python	class:Window	signature:(self)
vec2	.\\srmath.py	/^class vec2(object):$/;"	c	language:Python
vec3	.\\srmath.py	/^class vec3(object):$/;"	c	language:Python
vec4	.\\srmath.py	/^class vec4(object):$/;"	c	language:Python
vertex_shader	.\\test.py	/^vertex_shader = """$/;"	v	language:Python
vertices	.\\test.py	/^vertices = [ 0.6,  0.6, 0.0, 1.0,$/;"	v	language:Python
vertices	.\\test.py	/^vertices = numpy.array(vertices, dtype=numpy.float32)$/;"	v	language:Python
w	.\\main.py	/^		w = openglwindow.OpenGLWindow(pipeline.get_pipeline())$/;"	v	language:Python
w	.\\main.py	/^		w = pygamewindow.PyGameWindow(pipeline.get_pipeline())$/;"	v	language:Python
w	.\\main.py	/^		w = tkinterwindow.TkinterWindow(pipeline.get_pipeline())$/;"	v	language:Python
window_update	.\\pygamewindow.py	/^	def window_update(self):$/;"	m	language:Python	class:PyGameWindow	signature:(self)
window_update	.\\tkinterwindow.py	/^	def window_update(self):$/;"	m	language:Python	class:TkinterWindow	signature:(self)
window_update	.\\window.py	/^	def window_update(self):$/;"	m	language:Python	class:Window	signature:(self)
window_update	openglwindow.py	/^	def window_update(self):$/;"	m	class:OpenGLWindow
