!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Camera	.\camera.py	/^class Camera(object):$/;"	c
Color	.\color.py	/^class Color(object):$/;"	c
Color	.\entry.py	/^from color import Color$/;"	i
Color	.\framebuffer.py	/^from color import Color$/;"	i
Cube	.\primitive.py	/^class Cube(object):$/;"	c
DEFAULT_HEIGHT	.\framebuffer.py	/^	DEFAULT_HEIGHT = 1024$/;"	v	class:FrameBuffer
DEFAULT_HEIGHT	.\window.py	/^	DEFAULT_HEIGHT = 1024$/;"	v	class:Window
DEFAULT_WIDTH	.\framebuffer.py	/^	DEFAULT_WIDTH = 1024$/;"	v	class:FrameBuffer
DEFAULT_WIDTH	.\window.py	/^	DEFAULT_WIDTH = 1024$/;"	v	class:Window
EPSILON	.\srmath.py	/^EPSILON = 0.00001$/;"	v
FragmentShader	.\fragmentshader.py	/^class FragmentShader(object):$/;"	c
FragmentShader	.\pipeline.py	/^from fragmentshader import FragmentShader$/;"	i
FrameBuffer	.\entry.py	/^from framebuffer import FrameBuffer$/;"	i
FrameBuffer	.\framebuffer.py	/^class FrameBuffer(object):$/;"	c
Image	.\window.py	/^from PIL import Image, ImageTk$/;"	i
ImageTk	.\window.py	/^from PIL import Image, ImageTk$/;"	i
IndexBuffer	.\indexbuffer.py	/^class IndexBuffer(object):$/;"	c
IndexBuffer	.\pipeline.py	/^from indexbuffer import IndexBuffer$/;"	i
Pipeline	.\pipeline.py	/^class Pipeline(object):$/;"	c
Rasterizer	.\rasterizer.py	/^class Rasterizer(object):$/;"	c
ShaderUniform	.\shaderuniform.py	/^class ShaderUniform(object):$/;"	c
ShaderUniform	.\vertexshader.py	/^from shaderuniform import ShaderUniform$/;"	i
ShaderVarying	.\shadervarying.py	/^class ShaderVarying(object):$/;"	c
ShaderVarying	.\vertexshader.py	/^from shadervarying import ShaderVarying$/;"	i
SimpleFragmentShader	.\fragmentshader.py	/^class SimpleFragmentShader(FragmentShader):$/;"	c
SimpleVertexShader	.\pipeline.py	/^from vertexshader import SimpleVertexShader$/;"	i
SimpleVertexShader	.\vertexshader.py	/^class SimpleVertexShader(VertexShader):$/;"	c
Tkinter	.\window.py	/^import Tkinter$/;"	i
VertexArray	.\pipeline.py	/^from vertexarray import VertexArray$/;"	i
VertexArray	.\vertexarray.py	/^class VertexArray(object):$/;"	c
VertexBuffer	.\pipeline.py	/^from vertexbuffer import VertexBuffer$/;"	i
VertexBuffer	.\vertexbuffer.py	/^class VertexBuffer(object):$/;"	c
VertexShader	.\vertexshader.py	/^class VertexShader(object):$/;"	c
Window	.\entry.py	/^from window import Window$/;"	i
Window	.\window.py	/^class Window(object):$/;"	c
__add__	.\srmath.py	/^	def __add__(self, m):$/;"	m	class:mat3	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	class:vec2	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	class:vec3	file:
__add__	.\srmath.py	/^	def __add__(self, v):$/;"	m	class:vec4	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	class:vec2	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	class:vec3	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, i):$/;"	m	class:vec4	file:
__getitem__	.\srmath.py	/^	def __getitem__(self, xy):$/;"	m	class:mat3	file:
__init__	.\camera.py	/^	def __init__(self):$/;"	m	class:Camera
__init__	.\color.py	/^	def __init__(self, r=0.0, g=0.0, b=0.0, a=0.0):$/;"	m	class:Color
__init__	.\fragmentshader.py	/^	def __init__(self):$/;"	m	class:FragmentShader
__init__	.\fragmentshader.py	/^	def __init__(self):$/;"	m	class:SimpleFragmentShader
__init__	.\framebuffer.py	/^	def __init__(self):$/;"	m	class:FrameBuffer
__init__	.\indexbuffer.py	/^	def __init__(self):$/;"	m	class:IndexBuffer
__init__	.\pipeline.py	/^	def __init__(self):$/;"	m	class:Pipeline
__init__	.\primitive.py	/^	def __init__(self, size = 1):$/;"	m	class:Cube
__init__	.\shaderuniform.py	/^	def __init__(self, name):$/;"	m	class:ShaderUniform
__init__	.\shadervarying.py	/^	def __init__(self, location):$/;"	m	class:ShaderVarying
__init__	.\srmath.py	/^	def __init__(self, matList=None):$/;"	m	class:mat3
__init__	.\srmath.py	/^	def __init__(self, matList=None):$/;"	m	class:mat4
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0):$/;"	m	class:vec2
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0):$/;"	m	class:vec3
__init__	.\srmath.py	/^	def __init__(self, x = 0.0, y = 0.0, z = 0.0, w = 0.0):$/;"	m	class:vec4
__init__	.\vertexarray.py	/^	def __init__(self):$/;"	m	class:VertexArray
__init__	.\vertexbuffer.py	/^	def __init__(self):$/;"	m	class:VertexBuffer
__init__	.\vertexshader.py	/^	def __init__(self):$/;"	m	class:SimpleVertexShader
__init__	.\vertexshader.py	/^	def __init__(self):$/;"	m	class:VertexShader
__init__	.\window.py	/^	def __init__(self):$/;"	m	class:Window
__iter__	.\srmath.py	/^	def __iter__(self):$/;"	m	class:vec2	file:
__mul__	.\srmath.py	/^	def __mul__(self, multiplier):$/;"	m	class:mat3	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	class:vec2	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	class:vec3	file:
__mul__	.\srmath.py	/^	def __mul__(self, scalar):$/;"	m	class:vec4	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	class:mat3	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	class:vec2	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	class:vec3	file:
__repr__	.\srmath.py	/^	def __repr__(self):$/;"	m	class:vec4	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	class:vec2	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	class:vec3	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, i, val):$/;"	m	class:vec4	file:
__setitem__	.\srmath.py	/^	def __setitem__(self, xy, val):$/;"	m	class:mat3	file:
__sub__	.\srmath.py	/^	def __sub__(self, m):$/;"	m	class:mat3	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	class:vec2	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	class:vec3	file:
__sub__	.\srmath.py	/^	def __sub__(self, v):$/;"	m	class:vec4	file:
adjugateMat	.\srmath.py	/^	def adjugateMat(self):$/;"	m	class:mat3
adjugateMat	.\srmath.py	/^	def adjugateMat(self):$/;"	m	class:mat4
attachIndexBuffer	.\vertexarray.py	/^	def attachIndexBuffer(self, ib):$/;"	m	class:VertexArray
attachVertexBuffer	.\vertexarray.py	/^	def attachVertexBuffer(self, vb):$/;"	m	class:VertexArray
collections	.\srmath.py	/^import collections$/;"	i
createFragmentShader	.\pipeline.py	/^	def createFragmentShader(self, shaderName):$/;"	m	class:Pipeline
createIndexBuffer	.\pipeline.py	/^	def createIndexBuffer(self):$/;"	m	class:Pipeline
createResources	.\window.py	/^	def createResources(self):$/;"	m	class:Window
createVertexArray	.\pipeline.py	/^	def createVertexArray(self):$/;"	m	class:Pipeline
createVertexBuffer	.\pipeline.py	/^	def createVertexBuffer(self):$/;"	m	class:Pipeline
createVertexShader	.\pipeline.py	/^	def createVertexShader(self, shaderName):$/;"	m	class:Pipeline
create_vector	.\srmath.py	/^def create_vector(componentCount):$/;"	f
cross	.\srmath.py	/^	def cross(self, v):$/;"	m	class:vec3
cur_id	.\helpers.py	/^cur_id = 0$/;"	v
detachIndexBuffer	.\vertexarray.py	/^	def detachIndexBuffer(self, ibid):$/;"	m	class:VertexArray
detachVertexBuffer	.\vertexarray.py	/^	def detachVertexBuffer(self, vbid):$/;"	m	class:VertexArray
determinant	.\srmath.py	/^	def determinant(self):$/;"	m	class:mat3
determinant	.\srmath.py	/^	def determinant(self):$/;"	m	class:mat4
disableVertexAttribute	.\vertexarray.py	/^	def disableVertexAttribute(self, attributeIndex):$/;"	m	class:VertexArray
doInit	.\srmath.py	/^	def doInit(self, matList):$/;"	m	class:mat3
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	class:vec2
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	class:vec3
dot	.\srmath.py	/^	def dot(self, v):$/;"	m	class:vec4
drawVertexArray	.\pipeline.py	/^	def drawVertexArray(self, va):$/;"	m	class:Pipeline
enableVertexAttribute	.\vertexarray.py	/^	def enableVertexAttribute(self, attributeIndex, vbid):$/;"	m	class:VertexArray
fast_inverse_mat4	.\srmath.py	/^def fast_inverse_mat4(m):$/;"	f
fb	.\entry.py	/^fb = FrameBuffer()$/;"	v
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	class:vec2
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	class:vec3
fromList	.\srmath.py	/^	def fromList(self, l):$/;"	m	class:vec4
genid	.\helpers.py	/^def genid():$/;"	f
getAllEnabledVertexBuffers	.\vertexarray.py	/^	def getAllEnabledVertexBuffers(self):$/;"	m	class:VertexArray
getEnabledVertexBuffer	.\vertexarray.py	/^	def getEnabledVertexBuffer(self, attributeIndex):$/;"	m	class:VertexArray
getInverseMat	.\srmath.py	/^	def getInverseMat(self):$/;"	m	class:mat3
getInverseMat	.\srmath.py	/^	def getInverseMat(self):$/;"	m	class:mat4
height	.\framebuffer.py	/^	def height(self):$/;"	m	class:FrameBuffer
height	.\framebuffer.py	/^	def height(self, value):$/;"	m	class:FrameBuffer
height	.\window.py	/^	def height(self):$/;"	m	class:Window
height	.\window.py	/^	def height(self, value):$/;"	m	class:Window
helpers	.\pipeline.py	/^import helpers$/;"	i
hide	.\window.py	/^	def hide(self, event):$/;"	m	class:Window
length	.\srmath.py	/^	def length(self):$/;"	m	class:vec2
length	.\srmath.py	/^	def length(self):$/;"	m	class:vec3
length	.\srmath.py	/^	def length(self):$/;"	m	class:vec4
make_perspect_mat	.\srmath.py	/^def make_perspect_mat(near, far, left, right, top, bottom):$/;"	f
make_perspect_mat_fov	.\srmath.py	/^def make_perspect_mat_fov(aspectRatio, near, far, fov):$/;"	f
make_rotation_mat	.\srmath.py	/^def make_rotation_mat(direction, angle):$/;"	f
make_rotation_x_mat	.\srmath.py	/^def make_rotation_x_mat(xAngle):$/;"	f
make_rotation_y_mat	.\srmath.py	/^def make_rotation_y_mat(yAngle):$/;"	f
make_rotation_z_mat	.\srmath.py	/^def make_rotation_z_mat(zAngle):$/;"	f
make_scale_mat	.\srmath.py	/^def make_scale_mat(scale):$/;"	f
make_translation_mat	.\srmath.py	/^def make_translation_mat(translation):$/;"	f
make_view_mat	.\srmath.py	/^def make_view_mat(pos, up, forward):$/;"	f
mat3	.\srmath.py	/^class mat3(object):$/;"	c
mat4	.\srmath.py	/^class mat4(mat3):$/;"	c
math	.\primitive.py	/^import math$/;"	i
math	.\srmath.py	/^import math$/;"	i
multipliableVecType	.\srmath.py	/^	def multipliableVecType(self):$/;"	m	class:mat3
multipliableVecType	.\srmath.py	/^	def multipliableVecType(self):$/;"	m	class:mat4
ndc_to_screen_coord	.\srmath.py	/^def ndc_to_screen_coord(ndcPoint, width, height, near, far):$/;"	f
negate	.\srmath.py	/^	def negate(self):$/;"	m	class:vec2
negate	.\srmath.py	/^	def negate(self):$/;"	m	class:vec3
negate	.\srmath.py	/^	def negate(self):$/;"	m	class:vec4
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	class:vec2
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	class:vec3
normalize	.\srmath.py	/^	def normalize(self):$/;"	m	class:vec4
reset	.\framebuffer.py	/^	def reset(self, color = Color.BLACK):$/;"	m	class:FrameBuffer
run	.\fragmentshader.py	/^	def run(self):$/;"	m	class:FragmentShader
run	.\fragmentshader.py	/^	def run(self):$/;"	m	class:SimpleFragmentShader
run	.\vertexshader.py	/^	def run(self):$/;"	m	class:SimpleVertexShader
run	.\vertexshader.py	/^	def run(self):$/;"	m	class:VertexShader
setBufferData	.\indexbuffer.py	/^	def setBufferData(self, data, stride):$/;"	m	class:IndexBuffer
setBufferData	.\vertexbuffer.py	/^	def setBufferData(self, data, stride):$/;"	m	class:VertexBuffer
show	.\window.py	/^	def show(self, frameBuffer):$/;"	m	class:Window
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	class:vec2
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	class:vec3
sqrLength	.\srmath.py	/^	def sqrLength(self):$/;"	m	class:vec4
swapElements	.\srmath.py	/^	def swapElements(self, idx0, idx1):$/;"	m	class:mat3
toList	.\srmath.py	/^	def toList(self):$/;"	m	class:vec2
toList	.\srmath.py	/^	def toList(self):$/;"	m	class:vec3
toList	.\srmath.py	/^	def toList(self):$/;"	m	class:vec4
transpose	.\srmath.py	/^	def transpose(self):$/;"	m	class:mat3
transpose	.\srmath.py	/^	def transpose(self):$/;"	m	class:mat4
update	.\window.py	/^	def update(self):$/;"	m	class:Window
vec2	.\srmath.py	/^class vec2(object):$/;"	c
vec3	.\srmath.py	/^class vec3(object):$/;"	c
vec4	.\srmath.py	/^class vec4(object):$/;"	c
width	.\framebuffer.py	/^	def width(self):$/;"	m	class:FrameBuffer
width	.\framebuffer.py	/^	def width(self, value):$/;"	m	class:FrameBuffer
width	.\window.py	/^	def width(self):$/;"	m	class:Window
width	.\window.py	/^	def width(self, value):$/;"	m	class:Window
window	.\entry.py	/^window = Window()$/;"	v
